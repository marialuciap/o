name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
        # Aggiungi qui il codice per inviare il risultato al webhook
        echo "::set-output name=tests_passed::$(pytest --collect-only | grep 'collected ' | awk '{print $2}')"

  notify:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Send test results to webhook
      uses: distributhor/webhook-action@v2
      with:
        url: ${{ secrets.TEST_PASSED }}
        method: POST
        body: '{"tests_passed": "${{ needs.build.outputs.tests_passed }}"}'
